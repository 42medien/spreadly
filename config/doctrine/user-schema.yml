options:
  type: INNODB
  collate: utf8_unicode_ci
  charset: utf8

User:
  actAs:
    MemcacheBehavior: ~
    Timestampable:  ~
  columns:
    username:
      type:       string(63)
      unique:     true
    passwordhash:
      type:       string(32)
    salt:
      type:       string(8)
    gender:
      type:       string(1)
    salutation:
      type:       string(32)
    title:
      type:       string(64)
    firstname:
      type:       string(64)
    lastname:
      type:       string(64)
    sortname:
      type:       string(128)
      default:    ''
      notnull:    true
    birthdate:
      type:       date
    description:
      type:       string
    culture:
      type:       string(7)
    email: 
      type:       varchar(120) 
      notnull:  false      
    agb:
      type:       boolean
      default:    false
    ip:
      type:       string(128)
    active:
      type:       boolean
      notnull:    true
      default:    false
    default_avatar:
      type:       string(50)
    credentials:
      type:       string(30)
    credcommunities:
      type:       string(100)
    contacts_list:
      type:       string
    friends_list:
      type:       string
    community_object_id:  
      type:      integer
    done:
      type:     integer
      default:  0
      notnull:    true
    latest_activity:
      type:       integer
      default:   0

UserIdentityCon:
  actAs:
    Timestampable:  ~
  columns:
    user_id:
      type:       integer
    online_identity_id:
      type:       integer
    verified:
      type:       boolean
      default:    false
  relations:
    User: { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: UserIdentityCons }
    OnlineIdentity: { onDelete: CASCADE, local: online_identity_id, foreign: id, foreignAlias: OnlineIdentitys }
  indexes:
    combined_index:
      fields: [user_id, online_identity_id]
      type: unique

UserAvatar:
  actAs:
    Timestampable:  ~
  columns:
    user_id:
      type:       integer
    online_identity_id:
      type:       integer
    avatar:
      type:   string(50)
    imported_identifier:
      type:    string(255)  #gravatar email or url to service
    imported_community:
      type:       integer
    imported_type:
      type: integer
      size: 4
      default: 0
    is_main:
      type: boolean
      notnull: true
      default: false
  relations:
    User:    { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: UserAvatars }
    OnlineIdentity: { onDelete: CASCADE, local: online_identity_id, foreign: id, foreignAlias: UserAvatars }

UserEmailAddress:
  actAs:
    Timestampable:  ~
  columns:
    user_id:
      type:       integer
    online_identity_id:
      type:       integer
    email_address_type: 
      type:       varchar(32)
    email:
      type:       varchar(120)
    verified:           
      type:       boolean
      notnull:    true
      default:    false
    main:               
      type:       boolean
      notnull:    true
      default:    false
    is_modified:        
      type:       integer(4)
      default:    0 
    save_modified:      
      type:       integer(4)
      default:    0
    is_invitable: 
      type:       integer(4)
      default:    1
  relations:       
    User:        { onDelete: SET NULL, local: user_id, foreign: id, foreignAlias: UserEmailAddress }    
    OnlineIdentity: { onDelete: SET NULL, local: online_identity_id, foreign: id, foreignAlias: UserEmailAddress }    

#### saved in MongoDB
UserRelation:
  columns:
    user_id:
      type: integer
    owned_oi:    # list of owned OnlineIdentity ids
      type: string
    contacts_oi: # list of contacted OnlineIdentity ids
      type: string
    contact_uid: # list of contacted yiid user ids
      type: string
  relations:
    User: { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: UserRelations }
