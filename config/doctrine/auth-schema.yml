options:
  type: INNODB
  collate: utf8_unicode_ci
  charset: utf8

OauthConsumerToken:
  actAs:
    Timestampable:  ~

  columns:
    user_id:
      type:      integer
      notnull:   true
    consumer_key:
      type: string(255)
    token_key:
      type: string(255)
    token_secret:
      type:  string(255)
    token_type:
      type: string(40)
    oauth_callback:
      type: string(255)
    oauth_verifier:
      type:  string(40)
  relations:
    User:        { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: OauthConsumerTokens }


OauthNonce:
  actAs:
    Timestampable:  ~

  columns:
    consumer_key:
      type:     string(255)
    token_key:
      type:     string(255)
    nonce:
      type:     string


OauthServiceToken:
  actAs:
    Timestampable:  ~

  columns:
    user_id:
      type:   integer
      notnull: true
    online_identity_id:
      type:    integer
      notnull: true
    token_key:
      type:    string(255)
    token_secret:
      type:    string(255)
    token_type:
      type:    string(40)
    additional_params:
      type:    string
  relations:
    User:            { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: OauthServiceTokens }
    OnlineIdentity:  { onDelete: CASCADE, local: online_identity_id, foreign: id, foreignAlias: OauthServiceTokens }
  indexes:
    combined_index:
      fields: [user_id, online_identity_id]
      type: unique

AuthToken:
  actAs:
    Timestampable:  ~

  columns:
    user_id:
      type:   integer
      notnull: true
    online_identity_id:
      type:    integer
      notnull: true
    key:
      type:    string(255)
    secret:
      type:    string(255)
    type:
      type:    string(40)
    additional_params:
      type:    string
  relations:
    User:            { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: OauthServiceTokens }
    OnlineIdentity:  { onDelete: CASCADE, local: online_identity_id, foreign: id, foreignAlias: OauthServiceTokens }
  indexes:
    combined_index:
      fields: [user_id, online_identity_id]
      type: unique