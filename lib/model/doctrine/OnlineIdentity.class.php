<?php

/**
 * OnlineIdentity
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    yiid
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class OnlineIdentity extends BaseOnlineIdentity
{

  protected $aPostApiClient = null;
  /**
   * return User Objects who have added this OI
   */
  public function getConnectedUsers() {
    return UserIdentityConTable::getUsersConnectedToOnlineIdentity($this);
  }

  /**
   * returns IDs of Uyer Objects connected to that OI
   */
  public function getConnectedUserIds() {
    return UserIdentityConTable::getUserIdsConnectedToOnlineIdentity($this);
  }

  /**
   * builds the real profile-url using the identifier
   *
   * @return string
   */
  public function getUrl() {
    if ($this->getIdentityType() == OnlineIdentityTable::TYPE_IDENTITY) {
      return str_replace('%s', $this->getIdentifier(), $this->getCommunity()->getOiUrl());
    } else if ($this->getIdentityType() == OnlineIdentityTable::TYPE_URL) {
      return $this->getIdentifier();
    } else if ($this->getIdentityType() == OnlineIdentityTable::TYPE_IM) {
      return str_replace('%s', $this->getIdentifier(), $this->getCommunity()->getImUrl());
    } else {
      return null;
    }
  }





  /**
   * send status-message (for example like)
   *
   * @author Matthias Pfefferle
   * @param string $pUrl
   * @param string $pType
   * @param int $pScore
   * @param string $pTitle
   * @return int
   */
  public function sendStatusMessage($pUrl, $pType, $pScore, $pTitle, $pDescription, $pPhoto) {
    $this->aPostApiClient = PostApiFactory::factory($this->getCommunity()->getName());
    if ($this->aPostApiClient) {
      $lStatus = $this->aPostApiClient->doPost($this, $pUrl, $pType, $pScore, $pTitle, $pDescription, $pPhoto);
      return $lStatus;
    } else {
      try {
        sfContext::getInstance()->getLogger()->err("{OnlineIdentity} missing PostApiFactory for OnlineIdentity: ".$this->getId()." (Community ID: ".$this->getCommunityId().")");
      } catch (Exception $e) {}
    }
  }

  public function getOAuthToken(){


  }



}
