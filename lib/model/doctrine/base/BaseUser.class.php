<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $username
 * @property string $passwordhash
 * @property string $salt
 * @property string $gender
 * @property string $salutation
 * @property string $title
 * @property string $firstname
 * @property string $lastname
 * @property string $sortname
 * @property date $birthdate
 * @property string $description
 * @property string $culture
 * @property boolean $agb
 * @property string $ip
 * @property boolean $active
 * @property string $default_avatar
 * @property string $credentials
 * @property string $credcommunities
 * @property string $contacts_list
 * @property string $friends_list
 * 
 * @method string  getUsername()        Returns the current record's "username" value
 * @method string  getPasswordhash()    Returns the current record's "passwordhash" value
 * @method string  getSalt()            Returns the current record's "salt" value
 * @method string  getGender()          Returns the current record's "gender" value
 * @method string  getSalutation()      Returns the current record's "salutation" value
 * @method string  getTitle()           Returns the current record's "title" value
 * @method string  getFirstname()       Returns the current record's "firstname" value
 * @method string  getLastname()        Returns the current record's "lastname" value
 * @method string  getSortname()        Returns the current record's "sortname" value
 * @method date    getBirthdate()       Returns the current record's "birthdate" value
 * @method string  getDescription()     Returns the current record's "description" value
 * @method string  getCulture()         Returns the current record's "culture" value
 * @method boolean getAgb()             Returns the current record's "agb" value
 * @method string  getIp()              Returns the current record's "ip" value
 * @method boolean getActive()          Returns the current record's "active" value
 * @method string  getDefaultAvatar()   Returns the current record's "default_avatar" value
 * @method string  getCredentials()     Returns the current record's "credentials" value
 * @method string  getCredcommunities() Returns the current record's "credcommunities" value
 * @method string  getContactsList()    Returns the current record's "contacts_list" value
 * @method string  getFriendsList()     Returns the current record's "friends_list" value
 * @method User    setUsername()        Sets the current record's "username" value
 * @method User    setPasswordhash()    Sets the current record's "passwordhash" value
 * @method User    setSalt()            Sets the current record's "salt" value
 * @method User    setGender()          Sets the current record's "gender" value
 * @method User    setSalutation()      Sets the current record's "salutation" value
 * @method User    setTitle()           Sets the current record's "title" value
 * @method User    setFirstname()       Sets the current record's "firstname" value
 * @method User    setLastname()        Sets the current record's "lastname" value
 * @method User    setSortname()        Sets the current record's "sortname" value
 * @method User    setBirthdate()       Sets the current record's "birthdate" value
 * @method User    setDescription()     Sets the current record's "description" value
 * @method User    setCulture()         Sets the current record's "culture" value
 * @method User    setAgb()             Sets the current record's "agb" value
 * @method User    setIp()              Sets the current record's "ip" value
 * @method User    setActive()          Sets the current record's "active" value
 * @method User    setDefaultAvatar()   Sets the current record's "default_avatar" value
 * @method User    setCredentials()     Sets the current record's "credentials" value
 * @method User    setCredcommunities() Sets the current record's "credcommunities" value
 * @method User    setContactsList()    Sets the current record's "contacts_list" value
 * @method User    setFriendsList()     Sets the current record's "friends_list" value
 * 
 * @package    yiid
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('username', 'string', 63, array(
             'type' => 'string',
             'unique' => true,
             'length' => 63,
             ));
        $this->hasColumn('passwordhash', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('salt', 'string', 8, array(
             'type' => 'string',
             'length' => 8,
             ));
        $this->hasColumn('gender', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             ));
        $this->hasColumn('salutation', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('title', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('firstname', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('lastname', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('sortname', 'string', 128, array(
             'type' => 'string',
             'default' => '',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('birthdate', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('culture', 'string', 7, array(
             'type' => 'string',
             'length' => 7,
             ));
        $this->hasColumn('agb', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('ip', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('default_avatar', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('credentials', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('credcommunities', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('contacts_list', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('friends_list', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}